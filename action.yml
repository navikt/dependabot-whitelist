name: Dependabot Whitelist
description: Check whitelisted dependencies.
inputs:
  whitelist:
    description: A whitelist of dependencies as a multi-line string with newline separator
    required: true
    default: ''
  major:
    description: Whitelist major release
    required: false
    default: 'false'
  minor:
    description: Whitelist minor release
    required: false
    default: 'true'
  patch:
    description: Whitelist patch release
    required: false
    default: 'true'
  token:
    description: Github API Access Token
    required: false
    default: ${{ github.token }}
outputs:
  result:
    description: Result of the whitelist check
    value: ${{ steps.dependabot-whitelist.outputs.result }}
runs:
  using: composite
  steps:
    - uses: dependabot/fetch-metadata@v1.1.1
      id: metadata
      with:
        github-token: ${{ inputs.token }}

    - name: Fail if major and not whitelisted
      if: ${{ inputs.major == 'false' }} && ${{ steps.metadata.outputs.update-type == 'version-update:semver-major' }}
      shell: sh
      run: |
        echo "major version stopped"
        exit 1

    - name: Fail if minor and not whitelisted
      if: ${{ inputs.minor == 'false' }} && ${{ steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
      shell: sh
      run: |
        echo "minor version stopped"
        exit 1

    - name: Fail if patch and not whitelisted
      if: ${{ inputs.patch == 'false' }} && ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' }}
      shell: sh
      run: |
        echo "patch version stopped"
        exit 1

    - run: bash ${{ github.action_path }}/whitelist-check '${{ inputs.whitelist }}' '${{ steps.metadata.outputs.dependency-names }}'
      shell: bash
